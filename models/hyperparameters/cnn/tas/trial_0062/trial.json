{"trial_id": "0062", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_conv_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 3, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "filters_0", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 16, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "kernel_size_0", "default": 3, "conditions": [], "values": [3, 4, 5, 7], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_size_0", "default": 2, "conditions": [], "values": [2, 3, 4], "ordered": true}}, {"class_name": "Int", "config": {"name": "dense_units", "default": null, "conditions": [], "min_value": 16, "max_value": 144, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_rate", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "filters_1", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 16, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "kernel_size_1", "default": 3, "conditions": [], "values": [3, 4, 5, 7], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_size_1", "default": 2, "conditions": [], "values": [2, 3, 4], "ordered": true}}, {"class_name": "Int", "config": {"name": "filters_2", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 16, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "kernel_size_2", "default": 3, "conditions": [], "values": [3, 4, 5, 7], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_size_2", "default": 2, "conditions": [], "values": [2, 3, 4], "ordered": true}}], "values": {"num_conv_layers": 3, "filters_0": 64, "kernel_size_0": 3, "pool_size_0": 4, "dense_units": 80, "dropout_rate": 0.0, "filters_1": 32, "kernel_size_1": 5, "pool_size_1": 4, "filters_2": 16, "kernel_size_2": 3, "pool_size_2": 4, "tuner/epochs": 6, "tuner/initial_epoch": 0, "tuner/bracket": 2, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/home/brunotancredi00/miniconda3/lib/python3.12/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/brunotancredi00/miniconda3/lib/python3.12/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/brunotancredi00/miniconda3/lib/python3.12/site-packages/keras_tuner/src/tuners/hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/brunotancredi00/miniconda3/lib/python3.12/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/brunotancredi00/miniconda3/lib/python3.12/site-packages/keras_tuner/src/engine/tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/brunotancredi00/miniconda3/lib/python3.12/site-packages/keras_tuner/src/engine/hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/brunotancredi00/miniconda3/lib/python3.12/site-packages/keras/src/utils/traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/home/brunotancredi00/miniconda3/lib/python3.12/site-packages/keras/src/utils/traceback_utils.py\", line 124, in error_handler\n    del filtered_tb\n        ^^^^^^^^^^^\nValueError: Exception encountered when calling MaxPooling1D.call().\n\n\u001b[1mNegative dimension size caused by subtracting 4 from 3 for '{{node sequential_1/max_pooling1d_2_1/MaxPool1d}} = MaxPool[T=DT_FLOAT, data_format=\"NHWC\", explicit_paddings=[], ksize=[1, 1, 4, 1], padding=\"VALID\", strides=[1, 1, 4, 1]](sequential_1/max_pooling1d_2_1/MaxPool1d/ExpandDims)' with input shapes: [32,1,3,16].\u001b[0m\n\nArguments received by MaxPooling1D.call():\n  \u2022 inputs=tf.Tensor(shape=(32, 3, 16), dtype=float32)\n"}